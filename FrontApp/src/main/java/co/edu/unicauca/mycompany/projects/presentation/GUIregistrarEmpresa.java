package co.edu.unicauca.mycompany.projects.presentation;

import co.edu.unicauca.mycompany.projects.domain.entities.Company;
import co.edu.unicauca.mycompany.projects.domain.entities.enumSector;
import co.edu.unicauca.mycompany.projects.domain.entities.User;
import co.edu.unicauca.mycompany.projects.domain.services.CompanyService;
import co.edu.unicauca.mycompany.projects.domain.services.UserService;
import co.edu.unicauca.mycompany.projects.infra.Messages;
import co.edu.unicauca.mycompany.projects.infra.ValidationException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JComponent;


/**
 * Clase que representa la interfaz gráfica para el registro de empresas.
 * Permite a los usuarios registrar una empresa con su respectiva información.
 */
public class GUIregistrarEmpresa extends javax.swing.JFrame {

    /** Servicio de usuario para gestionar la autenticación y creación de usuarios. */
    private UserService userService;
    
    /** Servicio de empresa para gestionar el registro de empresas. */
    private CompanyService companyService;

    /**
     * Constructor de la clase GUIregistrarEmpresa.
     * Inicializa los servicios, los componentes gráficos y la configuración inicial de la ventana.
     *
     * @param companyService Servicio para gestionar las empresas.
     * @param userService Servicio para gestionar los usuarios.
     */
    public GUIregistrarEmpresa(CompanyService companyService, UserService userService) {
        this.companyService = companyService;
        this.userService = userService;
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        fillSectors();
    }

    /**
     * Rellena el combo box con los sectores disponibles.
     * Elimina todos los elementos existentes y añade los valores de la enumeración `enumSector`.
     */
    private void fillSectors() {
        cboComSector.removeAllItems();
        for (enumSector sector : enumSector.values()) {
            cboComSector.addItem(sector.toString());
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtComContactCharge = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtComNit = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtComName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtComContactLastName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtComContactPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtComContactName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtComEmail = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboComSector = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtComPassword = new javax.swing.JPasswordField();
        txtComConfirmPassword = new javax.swing.JPasswordField();
        rbSeePassword = new javax.swing.JRadioButton();
        rbSeeConfirmPassword = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 1, true));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(38, 42, 65));
        jLabel1.setText("Registrar empresa");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel2.setText("*Nombres de contacto");

        txtComContactCharge.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactCharge.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactCharge.setBorder(null);
        txtComContactCharge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactChargeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactChargeFocusLost(evt);
            }
        });
        txtComContactCharge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactChargeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel3.setText("*Nombre de la empresa");

        txtComNit.setBackground(new java.awt.Color(227, 230, 235));
        txtComNit.setForeground(new java.awt.Color(130, 134, 140));
        txtComNit.setBorder(null);
        txtComNit.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtComNit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComNitFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComNitFocusLost(evt);
            }
        });
        txtComNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComNitActionPerformed(evt);
            }
        });

        btnCancelar.setBackground(new java.awt.Color(95, 97, 112));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.setFocusable(false);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnRegistrar.setBackground(new java.awt.Color(90, 111, 228));
        btnRegistrar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("Registrar");
        btnRegistrar.setBorder(null);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.setDefaultCapable(false);
        btnRegistrar.setFocusable(false);
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel4.setText("*Email");

        txtComName.setBackground(new java.awt.Color(227, 230, 235));
        txtComName.setForeground(new java.awt.Color(130, 134, 140));
        txtComName.setBorder(null);
        txtComName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComNameFocusLost(evt);
            }
        });
        txtComName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel5.setText("*Nit de la empresa");

        txtComContactLastName.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactLastName.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactLastName.setBorder(null);
        txtComContactLastName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactLastNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactLastNameFocusLost(evt);
            }
        });
        txtComContactLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactLastNameActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel6.setText("*Telefono de contacto");

        txtComContactPhone.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactPhone.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactPhone.setBorder(null);
        txtComContactPhone.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactPhoneFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactPhoneFocusLost(evt);
            }
        });
        txtComContactPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactPhoneActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel7.setText("*Apellidos de contacto");

        txtComContactName.setBackground(new java.awt.Color(227, 230, 235));
        txtComContactName.setForeground(new java.awt.Color(130, 134, 140));
        txtComContactName.setBorder(null);
        txtComContactName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComContactNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComContactNameFocusLost(evt);
            }
        });
        txtComContactName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComContactNameActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel8.setText("*Sector");

        txtComEmail.setBackground(new java.awt.Color(227, 230, 235));
        txtComEmail.setForeground(new java.awt.Color(130, 134, 140));
        txtComEmail.setBorder(null);
        txtComEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtComEmailFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComEmailFocusLost(evt);
            }
        });
        txtComEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComEmailActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel9.setText("*Cargo del contacto");

        cboComSector.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel10.setText("*Contraseña");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 1, 14)); // NOI18N
        jLabel11.setText("*Confirmar contraseña");

        txtComPassword.setBackground(new java.awt.Color(227, 230, 235));

        txtComConfirmPassword.setBackground(new java.awt.Color(227, 230, 235));

        rbSeePassword.setText("ver");
        rbSeePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSeePasswordActionPerformed(evt);
            }
        });

        rbSeeConfirmPassword.setText("ver");
        rbSeeConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSeeConfirmPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(txtComName, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addComponent(txtComEmail)
                        .addComponent(txtComNit)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jLabel11)
                        .addComponent(txtComPassword)
                        .addComponent(txtComConfirmPassword)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSeePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbSeeConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtComContactLastName)
                        .addComponent(jLabel7)
                        .addComponent(txtComContactName)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)
                        .addComponent(txtComContactPhone)
                        .addComponent(jLabel9)
                        .addComponent(txtComContactCharge)
                        .addComponent(jLabel8)
                        .addComponent(cboComSector, 0, 282, Short.MAX_VALUE))
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(247, 247, 247))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboComSector)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComContactLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addGap(153, 153, 153))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComNit, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addGap(0, 0, 0)
                        .addComponent(txtComEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbSeePassword))
                        .addGap(9, 9, 9)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtComConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(rbSeeConfirmPassword)
                            .addComponent(txtComContactCharge, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/burbuja_azul.png"))); // NOI18N

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/burbuja_azul_left.png"))); // NOI18N
        jLabel14.setText("jLabel6");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 695, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel12))
                .addContainerGap(357, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     /**
     * Maneja la acción del botón de verificación para mostrar u ocultar la confirmación de la contraseña.
     * Si el botón de selección está activado, la contraseña se muestra en texto plano.
     * Si está desactivado, la contraseña se oculta con un carácter de reemplazo.
     *
     * @param evt Evento de acción generado al interactuar con el botón.
     */
    private void rbSeeConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSeeConfirmPasswordActionPerformed
        // TODO add your handling code here:
        if (rbSeeConfirmPassword.isSelected()) {
            // Mostrar contraseña
            txtComConfirmPassword.setEchoChar((char) 0);
        } else {
            // Ocultar contraseña
            txtComConfirmPassword.setEchoChar('*');
        }
    }//GEN-LAST:event_rbSeeConfirmPasswordActionPerformed

    /**
     * Maneja la acción del botón de verificación para mostrar u ocultar la contraseña principal.
     * Si el botón de selección está activado, la contraseña se muestra en texto plano.
     * Si está desactivado, la contraseña se oculta con un carácter de reemplazo.
     *
     * @param evt Evento de acción generado al interactuar con el botón.
     */
    private void rbSeePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSeePasswordActionPerformed
        // TODO add your handling code here:
        if (rbSeePassword.isSelected()) {
            // Mostrar contraseña
            txtComPassword.setEchoChar((char) 0);
        } else {
            // Ocultar contraseña
            txtComPassword.setEchoChar('*'); // Puedes cambiar '*' por el carácter que prefieras
        }
    }//GEN-LAST:event_rbSeePasswordActionPerformed

    private void txtComEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComEmailActionPerformed

    private void txtComEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComEmailFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComEmailFocusLost

    private void txtComEmailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComEmailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComEmailFocusGained

    private void txtComContactNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComContactNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactNameActionPerformed

    private void txtComContactNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactNameFocusLost

    private void txtComContactNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactNameFocusGained

    private void txtComContactPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComContactPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactPhoneActionPerformed

    private void txtComContactPhoneFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactPhoneFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactPhoneFocusLost

    private void txtComContactPhoneFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactPhoneFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactPhoneFocusGained

    private void txtComContactLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComContactLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactLastNameActionPerformed

    private void txtComContactLastNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactLastNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactLastNameFocusLost

    private void txtComContactLastNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactLastNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactLastNameFocusGained

    private void txtComNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNameActionPerformed

    private void txtComNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComNameFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNameFocusLost

    private void txtComNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComNameFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNameFocusGained

    /**
     * Maneja el evento de acción del botón de registro de empresa.
     * Recupera los datos ingresados en el formulario, valida la información y registra la empresa 
     * si los datos son correctos. Posteriormente, redirige a la pantalla de inicio de sesión.
     *
     * @param evt Evento de acción generado al presionar el botón de registro.
     */
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        //Recuperación de datos ingresados por el usuario
        String comNit = txtComNit.getText().trim();
        String comName = txtComName.getText().trim();
        String comSector = cboComSector.getSelectedItem().toString().trim();
        String comEmail = txtComEmail.getText().trim();
        String comPassword = new String(txtComPassword.getPassword()).trim();
        String comConfirmPassword = new String(txtComConfirmPassword.getPassword()).trim();
        String comContactName = txtComContactName.getText().trim();
        String comContactLastName = txtComContactLastName.getText().trim();
        String comContactCharge = txtComContactCharge.getText().trim();
        String comContactPhone = txtComContactPhone.getText().trim();

        //Valida que las contraseñas sean iguales
        if (!arePasswordsMatching(comPassword, comConfirmPassword)) {
            Messages.showMessageDialog("Las contraseñas ingresadas no coinciden, por favor verifique.", "Atención");
            txtComConfirmPassword.requestFocus();
            return;
        }

        // Convertir el sector seleccionado a enum
        enumSector sector = enumSector.valueOf(comSector.toUpperCase());
        Company company = new Company(comName, comContactName, comContactLastName, comContactPhone, comContactCharge, sector, comNit, comEmail, comPassword);
        User user = new User(comNit, comEmail, comPassword);
        
        //Registro de empresas
        if (!userService.existUserId(comNit)) {
            try {
                // Validación de datos antes del registro
                if (userService.validData(user) && companyService.validData(company)) {
                    // Guardar usuario y empresa en la base de datos
                    userService.saveUser(user);
                    companyService.saveCompany(company);
                    
                    // Cerrar la ventana actual y redirigir a la pantalla de inicio de sesión
                    this.dispose();
                    GUIinicioSesion instance = new GUIinicioSesion(this.userService);
                    instance.setVisible(true);
                    
                    // Mostrar mensaje de confirmación
                    Messages.mensajeVario("Empresa de nit " + comNit + " registrada correctamente");
                }

            } catch (ValidationException ve) {
                 // Manejo de errores de validación
                Messages.showErrorDialog(ve.getMessage(), "Error de validación");

                // Mapear campos del formulario con posibles errores
                Map<String, JComponent> mapError = new HashMap<>();
                mapError.put("userId", txtComNit);
                mapError.put("companyName", txtComName);
                mapError.put("companySector", cboComSector);
                mapError.put("userEmail", txtComEmail);
                mapError.put("userPassword", txtComPassword);
                mapError.put("contactName", txtComContactName);
                mapError.put("contactLastName", txtComContactLastName);
                mapError.put("contactPhone", txtComContactPhone);
                mapError.put("contactPosition", txtComContactCharge);

                // Resaltar el campo con el error detectado
                JComponent campoError = mapError.get(ve.getAtributoError());
                if (campoError != null) {
                    campoError.requestFocus();
                }
                return;
                
            } catch (Exception ex) {
                // Manejo de errores inesperados
                Messages.showErrorDialog(ex.getMessage(), "Error desconocido");
                return;
                
            }
        } else {
            // Manejo del caso en que el NIT ya existe en el sistema
            Messages.showMessageDialog("El NIT ingresado ya se encuentra en uso.", "Atención");
            txtComNit.requestFocus();
            
        }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * Maneja el evento de acción del botón "Cancelar".
     * Cierra la ventana actual y redirige a la pantalla de inicio de sesión.
     *
     * @param evt Evento de acción generado al presionar el botón "Cancelar".
     */
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
        GUIinicioSesion instance = new GUIinicioSesion(this.userService);
        instance.setVisible(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtComNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComNitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNitActionPerformed

    private void txtComNitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComNitFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNitFocusLost

    private void txtComNitFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComNitFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComNitFocusGained

    private void txtComContactChargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComContactChargeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactChargeActionPerformed

    private void txtComContactChargeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactChargeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactChargeFocusLost

    private void txtComContactChargeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComContactChargeFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComContactChargeFocusGained

    /**
     * Valida que las contraseñas ingresadas sean iguales.
     *
     * @param password String de la contraseña ingresada por el usuario
     * @param confirmPassword String de la confirmación de la contraseña
     * ingresada por el usuario
     * @return true si ambas contraseñas son iguales, false en caso contrario.
     */
    private boolean arePasswordsMatching(String password, String confirmPassword) {
        return password.equals(confirmPassword);
    }
    
    private void initPlaceholders() {
        new TextPrompt("Ingrese el NIT", txtComNit);
        new TextPrompt("Ingrese el nombre de la empresa", txtComName);
        new TextPrompt("Ingrese el correo electrónico", txtComEmail);
        new TextPrompt("Ingrese la contraseña", txtComPassword);
        new TextPrompt("Confirme la contraseña", txtComConfirmPassword);
        new TextPrompt("Ingrese el nombre del contacto", txtComContactName);
        new TextPrompt("Ingrese el apellido del contacto", txtComContactLastName);
        new TextPrompt("Ingrese el cargo del contacto", txtComContactCharge);
        new TextPrompt("Ingrese el teléfono del contacto", txtComContactPhone);
    }
    
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> cboComSector;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton rbSeeConfirmPassword;
    private javax.swing.JRadioButton rbSeePassword;
    private javax.swing.JPasswordField txtComConfirmPassword;
    private javax.swing.JTextField txtComContactCharge;
    private javax.swing.JTextField txtComContactLastName;
    private javax.swing.JTextField txtComContactName;
    private javax.swing.JTextField txtComContactPhone;
    private javax.swing.JTextField txtComEmail;
    private javax.swing.JTextField txtComName;
    private javax.swing.JTextField txtComNit;
    private javax.swing.JPasswordField txtComPassword;
    // End of variables declaration//GEN-END:variables
}
